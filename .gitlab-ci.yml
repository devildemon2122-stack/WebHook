image: node:20-alpine

stages:
  - install
  #- test
  - sonarqube
  - build
  - containerize
  - update-deployment

variables:
  IMAGE_NAME: "$HARBOR_REGISTRY/$HARBOR_PROJECT/rt_webhook_ui"
  IMAGE_TAG: "11.3" # Dynamic tag..
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DEPLOYMENT_FILE: "manifests/deployment.yml"

cache:
  paths:
    - node_modules/

install-job:
  stage: install
  script:
    - npm ci

#test-job:
  #stage: test
  #script:
    #- npm test -- --watchAll=false

build-job:
  stage: build
  script:
    - echo "Installing dependencies..."
    - npm ci
    - echo "Building React app..."
    - npm run build
  artifacts:
    paths:
      - build/
    expire_in: 1h
  only:
    - main
sonarqube-check:
  stage: sonarqube
  image: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - main

docker-build-and-push:
  stage: containerize
  image: docker:24.0.7-cli
  services:
    - name: docker:24.0.7-dind
      command: ["--insecure-registry=10.22.1.62:30002"]
  dependencies:
    - build-job
  script:
    - echo "Logging into Harbor..."
    - echo "$HARBOR_PASSWORD" | docker login "$HARBOR_REGISTRY" -u "$HARBOR_USERNAME" --password-stdin
    - echo "Building Docker image..."
    - docker build -t "$IMAGE_NAME:$IMAGE_TAG" .
    - echo "Pushing Docker image to Harbor..."
    - docker push "$IMAGE_NAME:$IMAGE_TAG"
  only:
    - main


update-deployment:
  stage: update-deployment
  image: alpine:latest
  dependencies:
    - docker-build-and-push
  before_script:
    - apk add --no-cache git sed
    - git config --global user.email "ci@example.com"
    - git config --global user.name "CI Bot"
    - git remote set-url origin "https://gitlab-ci-token:${GITLAB_TOKEN}@legit.lera.us/abhishek.mishra/webhook-ui.git"
  script:
    - echo "Updating image tag in $DEPLOYMENT_FILE to $IMAGE_TAG..."
    - sed -i "s|^\([[:space:]]*image:[[:space:]]*${IMAGE_NAME}:\).*|\1${IMAGE_TAG}|" "$DEPLOYMENT_FILE"
    - echo "Committing updated deployment file..."
    - git add "$DEPLOYMENT_FILE"
    - git commit -m "Update image tag to ${IMAGE_TAG} [ci skip]" || echo "No changes to commit"
    - git push origin HEAD:$CI_COMMIT_REF_NAME
  only:
    - main


